plugins {
	id 'java'
	id "com.adarshr.test-logger" version "2.1.1"
	id "com.github.johnrengelman.shadow" version "6.1.0"
}

version = getVersionFromDescriptionProps()

sourceCompatibility = 1.11
targetCompatibility = 1.11
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
  mavenCentral()
}

dependencies {
	implementation group: 'com.google.guava', name: 'guava', version: '19.0'
    implementation group: 'com.jakewharton.picnic', name: 'picnic', version: '0.5.0'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.10.0'
    implementation group: 'nz.ac.waikato.cms.weka', name: 'weka-dev', version: '3.9.5'
    compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

	testImplementation group: 'nz.ac.waikato.cms.weka', name: 'weka-dev', classifier: 'tests', version: '3.9.5'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
	// Required to silence warnings for now; see https://github.com/mockito/mockito/issues/1325
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.8.0'
}

tasks.withType(Test).configureEach {
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

testlogger {
	theme 'mocha-parallel'
	// Show stout/stderr for failed tests
	showStandardStreams true
	showPassedStandardStreams false
	showSkippedStandardStreams false
	showFailedStandardStreams true
}

// JavaDoc with MathJax and core Weka docs linked
task javadoc(type: Javadoc, overwrite:true) {
  source = sourceSets.main.allJava
  classpath = project.sourceSets.main.compileClasspath

  options.addBooleanOption("-allow-script-in-comments",true)
  // DO NOT use single quotes (') in the strings below, or you will get
  // weird errors like "Illegal package name" when you run the JavaDoc task
  options.header = "<script type=\"text/x-mathjax-config\">" +
  "  MathJax.Hub.Config({" +
  "     \"HTML-CSS\": {" +
  "       styles: {" +
  "         \".MathJax_Display\": {" +
  "            \"display\": \"inline\"," +
  "            \"text-align\": \"left\"" +
  "         }" +
  "       }" +
  "     }" +
  "  });" +
  "</script>" +
  "<script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML\"></script>"
  options.links("http://weka.sourceforge.net/doc.dev/")
}

task weka_package(type:Zip){
    // fat jar (with all dependencies) is needed for Weka package
    from shadowJar.outputs.files
    from (javadoc.outputs.files) {
        into 'doc'
    }
    from (projectDir) {
    include ([
        'src/**/*',
        'data/**/*',
        'Description.props',
        'build.gradle',
        'LICENSE',
        'NOTICE',
        'README.mkdn',
        'todo.txt'])
    }
}

// HELPER METHODS

def getVersionFromDescriptionProps() {
	def descriptionProps = new Properties()
	file("Description.props").withInputStream { descriptionProps.load(it) }
	return descriptionProps.get("Version")
}
